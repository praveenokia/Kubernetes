Kubernetes Master Node (Control Plane)

6443/TCP → Kubernetes API server (kubectl, kubelet, worker nodes talk here)

2379-2380/TCP → etcd (cluster DB, only for multi-master setups)

10250/TCP → Kubelet API

10259/TCP → kube-scheduler

10257/TCP → kube-controller-manager


Worker Nodes

10250/TCP → Kubelet API (for control plane → worker communication)

30000-32767/TCP → NodePort range (apps exposed via NodePort service)


Network Plugin (Flannel, Calico, etc.)

UDP 8285 and UDP 8472 → required for Flannel VXLAN traffic (pod-to-pod networking).



1. sudo -i
apt-get update && apt-get upgrade -y
swapoff -a
sed -i '/ swap / s/^/#/' /etc/fstab


2. cat <<EOF | tee /etc/modules-load.d/k8s.conf
overlay
br_netfilter
EOF

modprobe overlay
modprobe br_netfilter



3. cat <<EOF | tee /etc/sysctl.d/k8s.conf
net.bridge.bridge-nf-call-iptables  = 1
net.bridge.bridge-nf-call-ip6tables = 1
net.ipv4.ip_forward                 = 1
EOF

sysctl --system


4. apt-get install -y containerd
mkdir -p /etc/containerd
containerd config default | tee /etc/containerd/config.toml

sed -i 's/SystemdCgroup = false/SystemdCgroup = true/' /etc/containerd/config.toml
systemctl restart containerd
systemctl enable containerd


5. mkdir -p /etc/apt/keyrings
curl -fsSL https://pkgs.k8s.io/core:/stable:/v1.30/deb/Release.key | gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg

echo "deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.30/deb/ /" | tee /etc/apt/sources.list.d/kubernetes.list

apt-get update
apt-get install -y kubelet kubeadm kubectl
apt-mark hold kubelet kubeadm kubectl


7. kubeadm init --pod-network-cidr=10.244.0.0/16


8. kubectl apply -f https://raw.githubusercontent.com/flannel-io/flannel/master/Documentation/kube-flannel.yml

9. kubeadm init

kubeadm join 172.31.8.83:6443 --token 1k0xuq.lct1g3cftaxvqcrb \--discovery-token-ca-cert-hash sha256:636188fdb06571dcbce96bd8a42825a02dbe8040c2969b7e167e149346f20740
{ use this in node once in you get like this in Master }

  mkdir -p $HOME/.kube
  sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
  sudo chown $(id -u):$(id -g) $HOME/.kube/config

{ All the above you should paste in Master } 




10. kubectl get nodes
kubectl get pods -A



